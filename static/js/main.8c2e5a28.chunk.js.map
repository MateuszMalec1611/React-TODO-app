{"version":3,"sources":["api.js","store/TodoList/TodoList.services.jsx","store/TodoList/TodoList.actions.jsx","utils/prepareData.js","store/TodoList/TodoList.context.jsx","components/AddTask/AddTask.jsx","components/Task/Task.jsx","components/Loader/Loader.jsx","components/TasksList/TasksList.jsx","App.jsx","index.js"],"names":["api","axios","create","baseURL","process","fetchAllTasks","a","get","data","console","log","addTask","task","post","editTask","put","id","removeTask","delete","SET_DATA","DONE","EDIT","REMOVE","LOADING","prepareData","todoList","Object","entries","key","value","push","TodoListContext","createContext","initialState","isLoading","error","undefined","toDoListReducer","state","type","payload","editedTasks","map","todo","done","newTodoList","newTasksList","filter","TodoAppProvider","children","useReducer","todoListState","dispatch","setTasks","tasks","useEffect","Provider","AddTask","useContext","useState","taskValue","setTaskValue","taskError","setTaskError","handleaddTaskSubmit","event","preventDefault","length","newTask","name","onSubmit","className","onChange","target","Task","isEditing","editingTask","setEditingTask","useClickOutside","taskRef","hasClickedOutside","inputEl","useRef","handleDelete","handleDone","doneTask","handleEditionComponent","useCallback","current","focus","taskToDoElements","ref","onClick","taskToDo","taskDone","Loader","TasksList","tasksToDo","tasksDone","reverse","renderTasksToDo","renderTasksDone","showTasksToDo","showTasksDone","tasksFullList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c2e5a28.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const api = () => {\r\n\r\n  const instance = axios.create({\r\n    baseURL: process.env.REACT_APP_TASKS_API,\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport default api;","import api from '../../api';\r\n\r\nexport const fetchAllTasks = async () => {\r\n  try {\r\n    const { data } = await api().get('/Todo.json');\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return console.log(error);\r\n  }\r\n};\r\n\r\nexport const addTask = async (task) => {\r\n  try {\r\n    await api().post(`/Todo.json`, task);\r\n  } catch (error) {\r\n    return console.log(error);\r\n  }\r\n};\r\n\r\nexport const editTask = async (task) => {\r\n  try {\r\n    await api().put(`/Todo/${task.id}.json`, task);\r\n  } catch (error) {\r\n    return console.log(error);\r\n  }\r\n};\r\n\r\nexport const removeTask = async (task) => {\r\n  try {\r\n    await api().delete(`/Todo/${task.id}.json`);\r\n  } catch (error) {\r\n    return console.log(error);\r\n  }\r\n};\r\n","export const SET_DATA = 'DATA';\r\nexport const ADD = 'ADD';\r\nexport const DONE = 'DONE';\r\nexport const EDIT = 'EDIT';\r\nexport const REMOVE = 'REMOVE';\r\nexport const LOADING = 'LOADING';","export const prepareData = data => {\r\n    if (!data) return;\r\n    const todoList = [];\r\n\r\n    for (const [key, value] of Object.entries(data)) {\r\n        todoList.push({\r\n            id: key,\r\n            ...value,\r\n        });\r\n    }\r\n\r\n    return todoList;\r\n};\r\n","import { createContext, useReducer, useEffect } from 'react';\r\nimport { fetchAllTasks } from './TodoList.services';\r\nimport { ADD, DONE, EDIT, SET_DATA, REMOVE, LOADING } from './TodoList.actions';\r\nimport { prepareData } from '../../utils/prepareData';\r\n\r\nexport const TodoListContext = createContext();\r\n\r\nconst initialState = {\r\n    todoList: [],\r\n    isLoading: false,\r\n    error: undefined,\r\n};\r\n\r\nconst toDoListReducer = (state, { type, payload }) => {\r\n    switch (type) {\r\n        case SET_DATA:\r\n            return {\r\n                ...state,\r\n                todoList: payload ?? [],\r\n                isLoading: false,\r\n            };\r\n        case ADD:\r\n            return {\r\n                ...state,\r\n                todoList: [...state.todoList, payload],\r\n                isLoading: false,\r\n            };\r\n        case DONE:\r\n            const editedTasks = state.todoList.map(todo => {\r\n                if (todo.id === payload.id) todo.done = payload.value;\r\n                return todo;\r\n            });\r\n            return {\r\n                ...state,\r\n                todoList: editedTasks,\r\n                isLoading: false,\r\n            };\r\n        case EDIT:\r\n            const newTodoList = state.todoList.map(todo => {\r\n                if (todo.id === payload.id) todo = payload;\r\n                return todo;\r\n            });\r\n            return {\r\n                ...state,\r\n                todoList: newTodoList,\r\n                isLoading: false,\r\n            };\r\n        case REMOVE:\r\n            const newTasksList = state.todoList.filter(todo => todo.id !== payload.id);\r\n            return {\r\n                ...state,\r\n                todoList: newTasksList,\r\n                isLoading: false,\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: payload,\r\n            };\r\n\r\n        default:\r\n            console.error('Something went wrong');\r\n    }\r\n};\r\n\r\nconst TodoAppProvider = ({ children }) => {\r\n    const [todoListState, dispatch] = useReducer(toDoListReducer, initialState);\r\n\r\n    const setTasks = async () => {\r\n        dispatch({ type: LOADING, payload: true });\r\n        try {\r\n            const tasks = await fetchAllTasks();\r\n\r\n            dispatch({ type: SET_DATA, payload: prepareData(tasks) });\r\n        } catch (err) {\r\n            dispatch({ type: LOADING, payload: false });\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTasks();\r\n    }, []);\r\n\r\n    return (\r\n        <TodoListContext.Provider\r\n            value={{\r\n                dispatch,\r\n                todoListState,\r\n                setTasks,\r\n            }}>\r\n            {children}\r\n        </TodoListContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TodoAppProvider;\r\n","import React, { useState, useContext } from 'react';\r\nimport { TodoListContext } from '../../store/TodoList/TodoList.context';\r\nimport { addTask } from '../../store/TodoList/TodoList.services';\r\nimport { ADD, LOADING } from '../../store/TodoList/TodoList.actions';\r\nimport './AddTask.scss';\r\n\r\nconst AddTask = () => {\r\n    const { dispatch, setTasks, todoListState: { isLoading } } = useContext(TodoListContext);\r\n\r\n    const [taskValue, setTaskValue] = useState('');\r\n    const [taskError, setTaskError] = useState(false);\r\n\r\n    const handleAddTaskValue = ({ target: { value } }) => setTaskValue(value);\r\n    const handleaddTaskSubmit = async event => {\r\n        event.preventDefault();\r\n        if (taskValue.length < 2) {\r\n            setTaskError(true);\r\n            return;\r\n        }\r\n        dispatch({ type: LOADING, payload: true });\r\n        \r\n        const newTask = {\r\n            name: taskValue,\r\n            done: false,\r\n            id: null,\r\n        };\r\n        \r\n        try {\r\n            await addTask(newTask);\r\n        } catch (err) {\r\n            console.error(err);\r\n            dispatch({ type: LOADING, payload: false });\r\n        }\r\n        \r\n        dispatch({ type: ADD, payload: newTask });\r\n        setTasks();\r\n        \r\n        setTaskValue('');\r\n        setTaskError(false);\r\n    };\r\n\r\n    const preventEmptySubmit = event => {\r\n        event.preventDefault();\r\n        return;\r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={isLoading ? preventEmptySubmit : handleaddTaskSubmit} className=\"addTask\">\r\n            <label className=\"addTask__label\">\r\n                Add task\r\n                <input\r\n                    onChange={handleAddTaskValue}\r\n                    value={isLoading ? '' : taskValue}\r\n                    className=\"addTask__input\"\r\n                    type=\"text\"\r\n                />\r\n            </label>\r\n            {taskError && (\r\n                <p className=\"addTask__error\">The task must be at least 2 characters long</p>\r\n            )}\r\n            <button className=\"addTask__btn\">add</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddTask;\r\n","import React, { useState, useContext, useRef, useEffect, useCallback } from 'react';\r\nimport { useClickOutside } from 'react-click-outside-hook'\r\nimport { REMOVE, DONE, LOADING, EDIT } from '../../store/TodoList/TodoList.actions';\r\nimport { TodoListContext } from '../../store/TodoList/TodoList.context';\r\nimport { editTask, removeTask } from '../../store/TodoList/TodoList.services';\r\nimport './Task.scss';\r\n\r\nconst Task = ({ task, task: { id, name, done } }) => {\r\n    const { dispatch, todoListState: { isLoading } } = useContext(TodoListContext);\r\n    const [editingTask, setEditingTask] = useState({\r\n        isEditing: false,\r\n        name: ''\r\n    });\r\n    const [taskRef, hasClickedOutside] = useClickOutside();\r\n    const inputEl = useRef();\r\n\r\n    // DELETE BTN\r\n    const handleDelete = async () => {\r\n        dispatch({type: LOADING, payload: true});\r\n\r\n        try {\r\n            await removeTask(task);\r\n            dispatch({ type: REMOVE, payload: { id } });\r\n        }catch (err) {\r\n            console.log(err);\r\n            dispatch({type: LOADING, payload: false});\r\n        }\r\n\r\n    }\r\n\r\n    // DONE BTN\r\n    const handleDone = async value => {\r\n        const doneTask = {\r\n            ...task,\r\n            done: value\r\n        }\r\n        dispatch({type: LOADING, payload: true});\r\n        \r\n        try {\r\n            await editTask(doneTask);\r\n            dispatch({ type: DONE, payload: {id, value} });\r\n        } catch (err) {\r\n            console.error(err);\r\n            dispatch({type: LOADING, payload: false});\r\n        }\r\n    }\r\n\r\n    // EDITION BTN\r\n    const handleEditionComponent = useCallback(async () => {\r\n        if (editingTask.isEditing) {\r\n            inputEl.current.focus();\r\n            // SIMPLE VALIDATION\r\n            if(editingTask.name.length < 2) return true;\r\n            if(editingTask.name === name) {\r\n                setEditingTask({isEditing: false});\r\n                return true;\r\n            }\r\n            \r\n            const newTask = {\r\n                ...task,\r\n                name: editingTask.name\r\n            }\r\n            \r\n            dispatch({type: LOADING, payload: true});\r\n            \r\n            try {\r\n                await editTask(newTask);\r\n                dispatch({ type: EDIT, payload: newTask });\r\n            } catch (err) {\r\n                console.error(err);\r\n                dispatch({type: LOADING, payload: false});\r\n            }\r\n            setEditingTask({ ...editingTask, isEditing: false });\r\n            return;\r\n        }\r\n        setEditingTask({ isEditing: true, name });\r\n    }, [ dispatch, editingTask, name, task]);\r\n\r\n    const handleNameChange = ({ target: { value } }) => setEditingTask({ ...editingTask, name: value });\r\n\r\n    //FOCUS ON EDITING INPUT\r\n    useEffect(() => {\r\n        if (editingTask.isEditing) inputEl.current.focus();\r\n    },[editingTask.isEditing]);\r\n\r\n    //HANDLE CLICK OUTSIDE\r\n    useEffect(() => {\r\n        if(hasClickedOutside && editingTask.isEditing) handleEditionComponent();\r\n\r\n    }, [editingTask.isEditing, handleEditionComponent, hasClickedOutside]);\r\n    \r\n    // RENDER COMPONENTS\r\n    const taskToDoElements = (\r\n        <>\r\n            {\r\n                editingTask.isEditing\r\n                ? <input className=\"task__input\" type=\"text\" value={editingTask.name} onChange={handleNameChange} ref={inputEl}/>\r\n                : <p className=\"task__title\" onClick={handleEditionComponent}>{name}</p>\r\n            }\r\n            <div className=\"task__btn-box\">\r\n                <button onClick={editingTask.isEditing ? null : () => handleDone(true)} className=\"task__btn-box-btn\">\r\n                    done\r\n                </button>\r\n                <button onClick={isLoading ? null : handleEditionComponent} className=\"task__btn-box-btn\">\r\n                    {editingTask.isEditing ? 'ok' : 'edit'}\r\n                </button>\r\n                <button onClick={editingTask.isEditing ? null : handleDelete} className=\"task__btn-box-btn\">\r\n                    x\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n    \r\n    const taskToDo = (\r\n        <li ref={taskRef} className=\"task\">\r\n            {taskToDoElements}\r\n        </li>\r\n    );\r\n    \r\n    const taskDone = (\r\n        <li className=\"task\">\r\n            <p className=\"task__title task__title--done\">{name}</p>\r\n            <div className=\"task__btn-box\">\r\n                <button\r\n                    onClick={() => handleDone(false)}\r\n                    className=\"task__btn-box-btn task__btn-box-btn--undo\">\r\n                    undo\r\n                </button>\r\n                <button\r\n                    onClick={handleDelete}\r\n                    className=\"task__btn-box-btn task__btn-box-btn--done\">\r\n                    x\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n    \r\n    return <>{!done ? taskToDo : taskDone}</>;\r\n};\r\n\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loading-mask\">\r\n            <div className=\"preloader\">\r\n                <div className=\"c-three-dots-loader\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useContext } from 'react';\r\nimport { TodoListContext } from '../../store/TodoList/TodoList.context';\r\nimport Task from '../Task/Task';\r\nimport Loader from '../Loader/Loader';\r\nimport './TasksList.scss';\r\n\r\nconst TasksList = () => {\r\n    const { todoListState: { todoList, isLoading } } = useContext(TodoListContext);\r\n\r\n    //FILTER TASKS\r\n    const tasksToDo = todoList.filter(task => !task.done);\r\n    const tasksDone = todoList.filter(task => task.done).reverse();\r\n\r\n    //CREATE TASKS COMPONENTS\r\n    const renderTasksToDo = tasksToDo.map(task => (\r\n        <Task key={task.id} task={task} />\r\n    ));\r\n\r\n    const renderTasksDone = tasksDone.map(task => (\r\n        <Task key={task.id} task={task} />\r\n    ));\r\n\r\n\r\n    //INSOLATE COMPONENTS INTO DONE AND TO DO\r\n    const showTasksToDo =\r\n        !tasksToDo.length ? (\r\n            <p className=\"tasks-box__info\">No tasks on the list</p>\r\n        ) : (\r\n            <ul className=\"tasks-box__ul\">{renderTasksToDo}</ul>\r\n        );\r\n\r\n    const showTasksDone =\r\n        !tasksDone.length ? (\r\n            <p className=\"tasks-box__info\">No tasks completed</p>\r\n        ) : (\r\n            <ul className=\"tasks-box__ul\">{renderTasksDone}</ul>\r\n        );\r\n\r\n    //COMPONENT TO RENDER\r\n    const tasksFullList = (\r\n        <div className=\"tasks-box\">\r\n            <h2 className=\"tasks-box__header\">\r\n                Tasks to do ({tasksToDo.length})\r\n            </h2>\r\n            {showTasksToDo}\r\n\r\n            <h3 className=\"tasks-box__header--done\">\r\n                Done tasks ({tasksDone.length})\r\n            </h3>\r\n            {showTasksDone}\r\n        </div>\r\n    );\r\n    return <>{isLoading ? <Loader /> : tasksFullList}</>;\r\n};\r\n\r\nexport default TasksList;\r\n","import React from 'react';\r\nimport TodoListProvider from './store/TodoList/TodoList.context';\r\nimport AddTask from './components/AddTask/AddTask';\r\nimport TaskList from './components/TasksList/TasksList';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"toDo\">\r\n            <div className=\"toDo__container\">\r\n                <h1 className=\"toDo__header\">todo app</h1>\r\n                <TodoListProvider>\r\n                    <AddTask />\r\n                    <TaskList />\r\n                </TodoListProvider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}