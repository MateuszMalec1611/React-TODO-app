{"version":3,"sources":["api.js","store/TodoList/TodoList.services.jsx","store/TodoList/TodoList.actions.jsx","utils/prepareData.js","store/TodoList/TodoList.context.jsx","components/AddTask/AddTask.jsx","components/Task/Task.jsx","components/Loader/Loader.jsx","components/TasksList/TasksList.jsx","App.jsx","index.js"],"names":["api","axios","create","baseURL","process","fetchAllTodoTasks","a","get","data","fetchAllDoneTasks","addTask","task","post","setDoneOrTodo","value","put","id","delete","changeOrder","tasks","editTask","removeTask","SET_TODO_DATA","SET_DONE_DATA","CHANGE_ORDER_TODO","CHANGE_ORDER_DONE","DONE","EDIT","ERROR","LOADING","REMOVE","prepareData","todoList","Object","entries","key","push","TodoListContext","createContext","initialState","todoListTodo","todoListDone","isLoading","error","undefined","toDoListReducer","state","type","payload","newTodoList","newDoneList","newTodoListTodo","map","todo","newTasksListTodo","filter","newTasksListDone","alert","console","TodoAppProvider","children","useReducer","todoListState","dispatch","setTodoTasks","setDoneTasks","useEffect","Provider","AddTask","useContext","useState","taskValue","setTaskValue","taskError","setTaskError","handleaddTaskSubmit","event","preventDefault","length","newTask","name","done","onSubmit","className","onChange","target","Task","index","isEditing","editingTask","setEditingTask","inputRef","useRef","handleDelete","handleDone","doneTask","handleEditionComponent","useCallback","current","focus","taskToDoElements","ref","onClick","taskToDo","draggableId","provided","draggableProps","dragHandleProps","innerRef","taskDone","Loader","TasksList","onDragEnd","result","destination","source","droppableId","start","finish","newTasksOrder","splice","newTasksOrderDone","newTasksOrderTodo","renderTasksToDo","renderTasksDone","showTasksToDo","showTasksDone","tasksFullList","droppableProps","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f79e5f5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const api = () => {\r\n\r\n  const instance = axios.create({\r\n    baseURL: process.env.REACT_APP_TASKS_API,\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport default api;","import api from '../../api';\r\n\r\nexport const fetchAllTodoTasks = async () => {\r\n    const { data } = await api().get('/Todo/todo.json');\r\n    return data;\r\n};\r\nexport const fetchAllDoneTasks = async () => {\r\n    const { data } = await api().get('/Todo/done.json');\r\n    return data;\r\n};\r\n\r\nexport const addTask = async task => {\r\n    await api().post(`/Todo/todo.json`, task);\r\n    \r\n};\r\nexport const setDoneOrTodo = async (task, value) => {\r\n    if (value) {\r\n        await api().put(`/Todo/done/${task.id}.json`, task);\r\n        await api().delete(`/Todo/todo/${task.id}.json`);\r\n    } else if (!value) {\r\n        await api().put(`/Todo/todo/${task.id}.json`, task);       \r\n        await api().delete(`/Todo/done/${task.id}.json`);\r\n    }\r\n};\r\n\r\nexport const changeOrder = async (tasks, value) => {\r\n    if(value) await api().put(`/Todo/todo.json`, tasks);\r\n    if(!value) await api().put(`/Todo/done.json`, tasks);\r\n};\r\n\r\nexport const editTask = async task => {\r\n    await api().put(`/Todo/todo/${task.id}.json`, task);\r\n};\r\n\r\nexport const removeTask = async (id, value) => {\r\n    if(value) await api().delete(`/Todo/todo/${id}.json`);\r\n    if(!value) await api().delete(`/Todo/done/${id}.json`); \r\n};\r\n","export const ADD = 'ADD';\r\nexport const SET_TODO_DATA = 'DATA_TODO';\r\nexport const SET_DONE_DATA = 'DATA_DONE';\r\nexport const CHANGE_ORDER_TODO = 'CHANGE_ORDER_TODO';\r\nexport const CHANGE_ORDER_DONE = 'CHANGE_ORDER_DONE';\r\nexport const DONE = 'DONE';\r\nexport const EDIT = 'EDIT';\r\nexport const ERROR = 'ERROR';\r\nexport const LOADING = 'LOADING';\r\nexport const REMOVE = 'REMOVE';","export const prepareData = data => {\r\n    if (!data) return;\r\n    const todoList = [];\r\n\r\n    for (const [key, value] of Object.entries(data)) {\r\n        todoList.push({\r\n            id: key,\r\n            ...value,\r\n        });\r\n    }\r\n\r\n    return todoList;\r\n};\r\n","import { createContext, useReducer, useEffect } from 'react';\r\nimport { fetchAllTodoTasks, fetchAllDoneTasks } from './TodoList.services';\r\nimport { ADD, CHANGE_ORDER_TODO, CHANGE_ORDER_DONE, DONE, EDIT, ERROR, SET_TODO_DATA, SET_DONE_DATA, REMOVE, LOADING } from './TodoList.actions';\r\nimport { prepareData } from '../../utils/prepareData';\r\n\r\nexport const TodoListContext = createContext();\r\n\r\nconst initialState = {\r\n    todoListTodo: [],\r\n    todoListDone: [],\r\n    isLoading: false,\r\n    error: undefined,\r\n};\r\n\r\nconst toDoListReducer = (state, { type, payload }) => {\r\n    switch (type) {\r\n        case SET_TODO_DATA:\r\n            return {\r\n                ...state,\r\n                todoListTodo: payload ?? [],\r\n                isLoading: false,\r\n            };\r\n\r\n        case SET_DONE_DATA:\r\n            return {\r\n                ...state,\r\n                todoListDone: payload ?? [],\r\n                isLoading: false,\r\n            };\r\n        case ADD:\r\n            return {\r\n                ...state,\r\n                todoList: [...state.todoListTodo, payload],\r\n                isLoading: false,\r\n            };\r\n        case CHANGE_ORDER_TODO:\r\n            return {\r\n                ...state,\r\n                todoListTodo: payload,\r\n                isLoading: false,\r\n            }\r\n\r\n        case CHANGE_ORDER_DONE:\r\n            return {\r\n                ...state,\r\n                todoListDone: payload,\r\n                isLoading: false,\r\n            }\r\n        case DONE:   \r\n            return {\r\n                ...state,\r\n                todoListTodo: payload.newTodoList,\r\n                todoListDone: payload.newDoneList,\r\n                isLoading: false,\r\n            };\r\n        case EDIT:\r\n            const newTodoListTodo = state.todoListTodo.map(todo => {\r\n                if (todo.id === payload.id) todo = payload;\r\n                return todo;\r\n            });\r\n            return {\r\n                ...state,\r\n                todoListTodo: newTodoListTodo,\r\n                isLoading: false,\r\n            };\r\n        case REMOVE:\r\n            const newTasksListTodo = payload.value ? state.todoListTodo.filter(todo => todo.id !== payload.id) : state.todoListTodo;\r\n            const newTasksListDone = !payload.value ? state.todoListDone.filter(todo => todo.id !== payload.id) : state.todoListDone;\r\n            return {\r\n                ...state,\r\n                todoListTodo: newTasksListTodo,\r\n                todoListDone: newTasksListDone,\r\n                isLoading: false,\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: payload,\r\n            };\r\n        case ERROR:\r\n            alert(payload)\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n\r\n        default:\r\n            console.error('Something went wrong');\r\n    }\r\n};\r\n\r\nconst TodoAppProvider = ({ children }) => {\r\n    const [todoListState, dispatch] = useReducer(toDoListReducer, initialState);\r\n\r\n    const setTodoTasks = async () => {\r\n        dispatch({ type: LOADING, payload: true });\r\n        try {\r\n            const tasks = await fetchAllTodoTasks();\r\n            dispatch({ type: SET_TODO_DATA, payload: prepareData(tasks) });\r\n        } catch (err) {\r\n            dispatch({ type: ERROR, payload: err });\r\n        }\r\n    };\r\n\r\n    const setDoneTasks = async () => {\r\n        dispatch({ type: LOADING, payload: true });\r\n        try {\r\n            const tasks = await fetchAllDoneTasks();\r\n            dispatch({ type: SET_DONE_DATA, payload: prepareData(tasks) });\r\n        } catch (err) {\r\n            dispatch({ type: ERROR, payload: err });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTodoTasks();\r\n        setDoneTasks();\r\n    }, []);\r\n\r\n    return (\r\n        <TodoListContext.Provider\r\n            value={{\r\n                dispatch,\r\n                todoListState,\r\n                setTodoTasks,\r\n            }}>\r\n            {children}\r\n        </TodoListContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TodoAppProvider;\r\n","import React, { useState, useContext } from 'react';\r\nimport { TodoListContext } from '../../store/TodoList/TodoList.context';\r\nimport { addTask } from '../../store/TodoList/TodoList.services';\r\nimport { ADD, ERROR, LOADING } from '../../store/TodoList/TodoList.actions';\r\nimport './AddTask.scss';\r\n\r\nconst AddTask = () => {\r\n    const { dispatch, setTodoTasks, todoListState: { isLoading } } = useContext(TodoListContext);\r\n    \r\n    const [taskValue, setTaskValue] = useState('');\r\n    const [taskError, setTaskError] = useState(false);\r\n\r\n    const handleAddTaskValue = ({ target: { value } }) => setTaskValue(value);\r\n    const handleaddTaskSubmit = async event => {\r\n        event.preventDefault();\r\n        if (taskValue.length < 2) {\r\n            setTaskError(true);\r\n            return;\r\n        }\r\n        dispatch({ type: LOADING, payload: true });\r\n        \r\n        const newTask = {\r\n            name: taskValue,\r\n            done: false,\r\n            type: 'todo',\r\n            id: null,\r\n        };\r\n        \r\n        try {\r\n            await addTask(newTask);\r\n            dispatch({ type: ADD, payload: newTask });\r\n            setTodoTasks();\r\n        } catch (err) {\r\n            dispatch({type: ERROR, payload: err});\r\n        }\r\n        \r\n        setTaskValue('');\r\n        setTaskError(false);\r\n    };\r\n\r\n    const preventEmptySubmit = event => {\r\n        event.preventDefault();\r\n        return;\r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={isLoading ? preventEmptySubmit : handleaddTaskSubmit} className=\"addTask\">\r\n            <label className=\"addTask__label\">\r\n                Add task\r\n                <input\r\n                    onChange={handleAddTaskValue}\r\n                    value={isLoading ? '' : taskValue}\r\n                    className=\"addTask__input\"\r\n                    type=\"text\"\r\n                />\r\n            </label>\r\n            {taskError && (\r\n                <p className=\"addTask__error\">The task must be at least 2 characters long</p>\r\n            )}\r\n            <button className=\"addTask__btn\">add</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddTask;\r\n","import React, { useState, useContext, useRef, useEffect, useCallback } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n// import { useClickOutside } from 'react-click-outside-hook';\r\nimport { DONE, EDIT, ERROR, LOADING, REMOVE } from '../../store/TodoList/TodoList.actions';\r\nimport { TodoListContext } from '../../store/TodoList/TodoList.context';\r\nimport { editTask, removeTask, setDoneOrTodo  } from '../../store/TodoList/TodoList.services';\r\nimport './Task.scss';\r\n// import { TaskType } from './TaskType';\r\n\r\nconst Task = ({ task, index, task: { id, name, done } }) => {\r\n    const {\r\n        dispatch,\r\n        todoListState: { isLoading, todoListTodo, todoListDone },\r\n    } = useContext(TodoListContext);\r\n    // const {TASK_TODO, TASK_DONE} = TaskType;\r\n    const [editingTask, setEditingTask] = useState({\r\n        isEditing: false,\r\n        name: '',\r\n    });\r\n    // const [taskRef, hasClickedOutside] = useClickOutside();\r\n    const inputRef = useRef();\r\n\r\n    //DRAG AND DROP\r\n\r\n    // DELETE BTN\r\n    const handleDelete = async value => {\r\n        dispatch({ type: LOADING, payload: true });\r\n\r\n        try {\r\n            await removeTask(id, value);\r\n            dispatch({ type: REMOVE, payload: { id, value } });\r\n        } catch (err) {\r\n            dispatch({ type: ERROR, payload: err });\r\n        }\r\n    };\r\n\r\n    // DONE BTN\r\n    const handleDone = async (value, type) => {\r\n        const doneTask = {\r\n            ...task,\r\n            done: value,\r\n            type,\r\n        };\r\n        dispatch({ type: LOADING, payload: true });\r\n\r\n        if (value) {\r\n            const newTodoList = todoListTodo.filter(todo => todo.id !== task.id);\r\n            const newDoneList = [...todoListDone];\r\n            newDoneList.push(doneTask);\r\n            try {\r\n                await setDoneOrTodo (doneTask, value);\r\n                dispatch({ type: DONE, payload: { newTodoList, newDoneList } });\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err });\r\n            }\r\n        } else {\r\n            const newDoneList = todoListDone.filter(todo => todo.id !== task.id);\r\n            const newTodoList = [...todoListTodo];\r\n            newTodoList.push(doneTask);\r\n\r\n            try {\r\n                await setDoneOrTodo (doneTask, value);\r\n                dispatch({ type: DONE, payload: { newTodoList, newDoneList } });\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err });\r\n            }\r\n        }\r\n    };\r\n\r\n    // EDITION BTN\r\n    const handleEditionComponent = useCallback(async () => {\r\n        if (editingTask.isEditing) {\r\n            inputRef.current.focus();\r\n            // SIMPLE VALIDATION\r\n            if (editingTask.name.length < 2) return true;\r\n            if (editingTask.name === name) {\r\n                setEditingTask({ isEditing: false });\r\n                return true;\r\n            }\r\n\r\n            const newTask = {\r\n                ...task,\r\n                name: editingTask.name,\r\n            };\r\n\r\n            dispatch({ type: LOADING, payload: true });\r\n\r\n            try {\r\n                await editTask(newTask);\r\n                dispatch({ type: EDIT, payload: newTask });\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err });\r\n            }\r\n            setEditingTask({ ...editingTask, isEditing: false });\r\n            return;\r\n        }\r\n        setEditingTask({ isEditing: true, name });\r\n    }, [dispatch, editingTask, name, task]);\r\n\r\n    const handleNameChange = ({ target: { value } }) =>\r\n        setEditingTask({ ...editingTask, name: value });\r\n\r\n    //FOCUS ON EDITING INPUT\r\n    useEffect(() => {\r\n        if (editingTask.isEditing) inputRef.current.focus();\r\n    }, [editingTask.isEditing]);\r\n\r\n    //HANDLE CLICK OUTSIDE\r\n    // useEffect(() => {\r\n    //     if (hasClickedOutside && editingTask.isEditing) handleEditionComponent();\r\n    // }, [editingTask.isEditing, handleEditionComponent, hasClickedOutside]);\r\n\r\n    // RENDER COMPONENTS\r\n    const taskToDoElements = (\r\n        <>\r\n            {editingTask.isEditing ? (\r\n                <input\r\n                    className=\"task__input\"\r\n                    type=\"text\"\r\n                    value={editingTask.name}\r\n                    onChange={handleNameChange}\r\n                    ref={inputRef}\r\n                />\r\n            ) : (\r\n                <p className=\"task__title\" onClick={handleEditionComponent}>\r\n                    {name}\r\n                </p>\r\n            )}\r\n            <div className=\"task__btn-box\">\r\n                <button\r\n                    onClick={editingTask.isEditing ? null : () => handleDone(true, 'done')}\r\n                    className=\"task__btn-box-btn\">\r\n                    done\r\n                </button>\r\n                <button\r\n                    onClick={isLoading ? null : handleEditionComponent}\r\n                    className=\"task__btn-box-btn\">\r\n                    {editingTask.isEditing ? 'ok' : 'edit'}\r\n                </button>\r\n                <button\r\n                    onClick={editingTask.isEditing ? null : () => handleDelete(true)}\r\n                    className=\"task__btn-box-btn\">\r\n                    x\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    const taskToDo = (\r\n        <Draggable draggableId={id} index={index}>\r\n            {provided => (\r\n                <li\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                    className=\"task\">\r\n                    {taskToDoElements}\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    );\r\n\r\n    const taskDone = (\r\n        <Draggable draggableId={id} index={index}>\r\n            {provided => (\r\n                <li\r\n                    className=\"task\"\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}>\r\n                    <p className=\"task__title task__title--done\">{name}</p>\r\n                    <div className=\"task__btn-box\">\r\n                        <button\r\n                            onClick={() => handleDone(false, 'todo')}\r\n                            className=\"task__btn-box-btn task__btn-box-btn--undo\">\r\n                            undo\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleDelete(false)}\r\n                            className=\"task__btn-box-btn task__btn-box-btn--done\">\r\n                            x\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    );\r\n\r\n    return <>{!done ? taskToDo : taskDone}</>;\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loading-mask\">\r\n            <div className=\"preloader\">\r\n                <div className=\"c-three-dots-loader\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useContext } from 'react';\r\nimport {\r\n    CHANGE_ORDER_TODO,\r\n    CHANGE_ORDER_DONE,\r\n    ERROR,\r\n    LOADING,\r\n} from '../../store/TodoList/TodoList.actions';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { TodoListContext } from '../../store/TodoList/TodoList.context';\r\nimport { changeOrder } from '../../store/TodoList/TodoList.services';\r\nimport Task from '../Task/Task';\r\nimport Loader from '../Loader/Loader';\r\nimport './TasksList.scss';\r\n// import { TaskType } from '../Task/TaskType';\r\n\r\nconst TasksList = () => {\r\n    const {\r\n        dispatch,\r\n        todoListState: { todoListTodo, todoListDone, isLoading },\r\n    } = useContext(TodoListContext);\r\n    // const { TASK_TODO, TASK_DONE } = TaskType;\r\n\r\n    //DRAG AND DROP\r\n    const onDragEnd = async result => {\r\n        const { destination, source } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if (\r\n            destination.droppableId === source.droppableId &&\r\n            destination.index === source.index\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const start = source.droppableId;\r\n        const finish = destination.droppableId;\r\n\r\n        if (start === finish) {\r\n            if (source.droppableId === 'todo') {\r\n                dispatch({ type: LOADING, payload: true });\r\n\r\n                const newTasksOrder = todoListTodo;\r\n                const task = newTasksOrder.splice(source.index, 1);\r\n                newTasksOrder.splice(destination.index, 0, ...task);\r\n\r\n                try {\r\n                    await changeOrder(newTasksOrder, true);\r\n                    dispatch({ type: CHANGE_ORDER_TODO, payload: newTasksOrder });\r\n                } catch (err) {\r\n                    dispatch({ type: ERROR, payload: err });\r\n                }\r\n            } else {\r\n                dispatch({ type: LOADING, payload: true });\r\n\r\n                const newTasksOrder = todoListDone;\r\n                const task = newTasksOrder.splice(source.index, 1);\r\n                newTasksOrder.splice(destination.index, 0, ...task);\r\n\r\n                try {\r\n                    await changeOrder(newTasksOrder, false);\r\n                    dispatch({ type: CHANGE_ORDER_DONE, payload: newTasksOrder });    \r\n                } catch (err) {\r\n                    dispatch({ type: ERROR, payload: err });\r\n                }\r\n            }\r\n\r\n        } else if (start === 'todo' && finish === 'done') {\r\n            dispatch({ type: LOADING, payload: true });\r\n\r\n            const newTasksOrderTodo = todoListTodo;\r\n            const newTasksOrderDone = todoListDone;\r\n            const task = newTasksOrderTodo.splice(source.index, 1);\r\n            task[0].done = !task[0].done;\r\n\r\n            newTasksOrderDone.splice(destination.index, 0, ...task);\r\n\r\n            dispatch({ type: CHANGE_ORDER_TODO, payload: newTasksOrderTodo });\r\n            dispatch({ type: CHANGE_ORDER_DONE, payload: newTasksOrderDone });\r\n\r\n            try {\r\n                await changeOrder(newTasksOrderTodo, true);\r\n                await changeOrder(newTasksOrderDone, false);\r\n                dispatch({ type: CHANGE_ORDER_TODO, payload: newTasksOrderTodo });\r\n                dispatch({ type: CHANGE_ORDER_DONE, payload: newTasksOrderDone });\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err });\r\n            }\r\n\r\n        } else if (start === 'done' && finish === 'todo') {\r\n            dispatch({ type: LOADING, payload: true });\r\n\r\n            const newTasksOrderDone = todoListDone;\r\n            const newTasksOrderTodo = todoListTodo;\r\n            const task = newTasksOrderDone.splice(source.index, 1);\r\n            task[0].done = !task[0].done;\r\n\r\n            newTasksOrderTodo.splice(destination.index, 0, ...task);\r\n\r\n            try {\r\n                await changeOrder(newTasksOrderTodo, true);\r\n                await changeOrder(newTasksOrderDone, false);\r\n                dispatch({ type: CHANGE_ORDER_TODO, payload: newTasksOrderTodo });\r\n                dispatch({ type: CHANGE_ORDER_DONE, payload: newTasksOrderDone });\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err });\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    //CREATE TASKS COMPONENTS\r\n    const renderTasksToDo = todoListTodo.map((task, index) => (\r\n        <Task key={task.id} index={index} task={task} />\r\n    ));\r\n\r\n    const renderTasksDone = todoListDone.map((task, index) => (\r\n        <Task key={task.id} index={index} task={task} />\r\n    ));\r\n\r\n    //INSOLATE COMPONENTS INTO DONE AND TO DO\r\n    const showTasksToDo = !todoListTodo.length ? (\r\n        <p className=\"tasks-box__info\">No tasks on the list</p>\r\n    ) : (\r\n        <ul className=\"tasks-box__ul\">{renderTasksToDo}</ul>\r\n    );\r\n\r\n    const showTasksDone = !todoListDone.length ? (\r\n        <p className=\"tasks-box__info\">No tasks completed</p>\r\n    ) : (\r\n        <ul className=\"tasks-box__ul\">{renderTasksDone}</ul>\r\n    );\r\n\r\n    //COMPONENT TO RENDER\r\n    const tasksFullList = (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <div className=\"tasks-box\">\r\n                <Droppable droppableId=\"todo\">\r\n                    {provided => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            className=\"tasks-box-todo\">\r\n                            <h2 className=\"tasks-box__header\">\r\n                                Tasks to do ({todoListTodo.length})\r\n                            </h2>\r\n                            {showTasksToDo}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n\r\n                <Droppable droppableId=\"done\">\r\n                    {provided => (\r\n                        <div\r\n                            className=\"tasks-box-done\"\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}>\r\n                            <h3 className=\"tasks-box__header--done\">\r\n                                Done tasks ({todoListDone.length})\r\n                            </h3>\r\n                            {showTasksDone}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n        </DragDropContext>\r\n    );\r\n    return <>{isLoading ? <Loader /> : tasksFullList}</>;\r\n};\r\n\r\nexport default TasksList;\r\n","import React from 'react';\r\nimport TodoListProvider from './store/TodoList/TodoList.context';\r\nimport AddTask from './components/AddTask/AddTask';\r\nimport TaskList from './components/TasksList/TasksList';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"toDo\">\r\n            <div className=\"toDo__container\">\r\n                <h1 className=\"toDo__header\">todo app</h1>\r\n                <TodoListProvider>\r\n                    <AddTask />\r\n                    <TaskList />\r\n                </TodoListProvider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}