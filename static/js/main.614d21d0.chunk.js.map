{"version":3,"sources":["api.js","store/TodoList/TodoList.services.jsx","store/TodoList/TodoList.actions.jsx","utils/prepareData.js","store/TodoList/TodoList.context.jsx","components/AddTask/AddTask.jsx","components/TasksList/TaskListType.js","components/Loader/Loader.jsx","components/Task/Task.jsx","components/TasksList/TasksList.jsx","App.jsx","index.js"],"names":["api","axios","create","baseURL","process","fetchAllTasks","a","get","data","addTask","task","post","setDoneOrTodo","value","put","id","delete","changeOrder","editTask","removeTask","SET_DATA","CHANGE_LIST_ORDER","DONE","EDIT","ERROR","LOADING","REMOVE","prepareData","todoList","Object","entries","key","push","TodoListContext","createContext","initialState","todoListTodo","todoListDone","isLoading","error","undefined","toDoListReducer","state","type","payload","todo","done","newTasksOrderTodo","newTasksOrderDone","newTodoList","newDoneList","newTodoListTodo","map","newTasksListTodo","filter","newTasksListDone","alert","console","TodoAppProvider","children","useReducer","todoListState","dispatch","setTasks","tasks","useEffect","Provider","AddTask","useContext","useState","taskValue","setTaskValue","taskError","setTaskError","handleaddTaskSubmit","event","preventDefault","length","newTask","name","onSubmit","className","onChange","target","TODO_LIST","DONE_LIST","Loader","Task","index","isEditing","editingTask","setEditingTask","inputRef","useRef","handleDelete","handleDone","doneTask","handleEditionComponent","useCallback","current","focus","taskToDoElements","ref","onClick","taskToDo","draggableId","provided","draggableProps","dragHandleProps","innerRef","taskDone","TasksList","onDragEnd","result","destination","source","droppableId","start","finish","splice","forEach","renderTasksToDo","renderTasksDone","showTasksToDo","showTasksDone","tasksFullList","droppableProps","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.614d21d0.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const api = () => {\r\n\r\n  const instance = axios.create({\r\n    baseURL: process.env.REACT_APP_TASKS_API,\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport default api;","import api from '../../api';\r\n\r\nexport const fetchAllTasks = async () => {\r\n    const { data } = await api().get('/Todo.json');\r\n    return data ?? [];\r\n};\r\n\r\nexport const addTask = async task => {\r\n    await api().post(`/Todo/todo.json`, task);\r\n    \r\n};\r\n\r\nexport const setDoneOrTodo = async (task, value) => {\r\n    if (value) {\r\n        await api().put(`/Todo/done/${task.id}.json`, task);\r\n        await api().delete(`/Todo/todo/${task.id}.json`);\r\n    } else if (!value) {\r\n        await api().put(`/Todo/todo/${task.id}.json`, task);       \r\n        await api().delete(`/Todo/done/${task.id}.json`);\r\n    }};\r\n\r\nexport const changeOrder = async (task, value) => {\r\n    // if(value) {\r\n    //     console.log(task);\r\n    //     await api().delete(`/Todo/todo.json`); \r\n    //     await api().post(`/Todo/todo.json`, task);\r\n    // }\r\n \r\n};\r\n\r\nexport const editTask = async task => {\r\n    await api().put(`/Todo/todo/${task.id}.json`, task);\r\n};\r\n\r\nexport const removeTask = async (id, value) => {\r\n    if(value) await api().delete(`/Todo/todo/${id}.json`);\r\n    if(!value) await api().delete(`/Todo/done/${id}.json`); \r\n};\r\n","export const SET_DATA = 'DATA_TODO';\r\nexport const ADD = 'ADD';\r\nexport const CHANGE_LIST_ORDER = 'CHANGE_ORDER_TODO';\r\nexport const DONE = 'DONE';\r\nexport const EDIT = 'EDIT';\r\nexport const ERROR = 'ERROR';\r\nexport const LOADING = 'LOADING';\r\nexport const REMOVE = 'REMOVE';","export const prepareData = data => {\r\n    if (!data) return;\r\n    const todoList = [];\r\n\r\n    for (const [key, value] of Object.entries(data)) {\r\n        todoList.push({\r\n            id: key,\r\n            ...value,\r\n        });\r\n    }\r\n\r\n    return todoList;\r\n};\r\n","import { createContext, useReducer, useEffect } from 'react';\r\nimport { fetchAllTasks  } from './TodoList.services';\r\nimport { ADD, CHANGE_LIST_ORDER, DONE, EDIT, ERROR, SET_DATA, REMOVE, LOADING } from './TodoList.actions';\r\nimport { prepareData } from '../../utils/prepareData';\r\n\r\nexport const TodoListContext = createContext();\r\n\r\nconst initialState = {\r\n    todoListTodo: [],\r\n    todoListDone: [],\r\n    isLoading: false,\r\n    error: undefined,\r\n};\r\n\r\nconst toDoListReducer = (state, { type, payload }) => {\r\n    switch (type) {\r\n        case SET_DATA:\r\n            return {\r\n                ...state,\r\n                todoListTodo: payload.todo ?? [],\r\n                todoListDone: payload.done ?? [],\r\n                isLoading: false,\r\n            };\r\n        case ADD:\r\n            return {\r\n                ...state,\r\n                todoList: [...state.todoListTodo, payload],\r\n                isLoading: false,\r\n            };\r\n        case CHANGE_LIST_ORDER:\r\n            return {\r\n                ...state,\r\n                todoListTodo: payload.newTasksOrderTodo,\r\n                todoListDone: payload.newTasksOrderDone,\r\n                isLoading: false,\r\n            }\r\n        case DONE:   \r\n            return {\r\n                ...state,\r\n                todoListTodo: payload.newTodoList,\r\n                todoListDone: payload.newDoneList,\r\n                isLoading: false,\r\n            };\r\n        case EDIT:\r\n            const newTodoListTodo = state.todoListTodo.map(todo => {\r\n                if (todo.id === payload.id) todo = payload;\r\n                return todo;\r\n            });\r\n            return {\r\n                ...state,\r\n                todoListTodo: newTodoListTodo,\r\n                isLoading: false,\r\n            };\r\n        case REMOVE:\r\n            const newTasksListTodo = payload.value ? state.todoListTodo.filter(todo => todo.id !== payload.id) : state.todoListTodo;\r\n            const newTasksListDone = !payload.value ? state.todoListDone.filter(todo => todo.id !== payload.id) : state.todoListDone;\r\n            return {\r\n                ...state,\r\n                todoListTodo: newTasksListTodo,\r\n                todoListDone: newTasksListDone,\r\n                isLoading: false,\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: payload,\r\n            };\r\n        case ERROR:\r\n            alert(payload)\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n\r\n        default:\r\n            console.error('Something went wrong');\r\n    }\r\n};\r\n\r\nconst TodoAppProvider = ({ children }) => {\r\n    const [todoListState, dispatch] = useReducer(toDoListReducer, initialState);\r\n\r\n    const setTasks = async () => {\r\n        dispatch({ type: LOADING, payload: true });\r\n        try {\r\n            const tasks = await fetchAllTasks();\r\n            dispatch({ type: SET_DATA, payload: {todo: prepareData(tasks.todo), done: prepareData(tasks.done)} });\r\n        } catch (err) {\r\n            dispatch({ type: ERROR, payload: err });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTasks();\r\n    }, []);\r\n\r\n    return (\r\n        <TodoListContext.Provider\r\n            value={{\r\n                dispatch,\r\n                todoListState,\r\n                setTasks,\r\n            }}>\r\n            {children}\r\n        </TodoListContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TodoAppProvider;\r\n","import React, { useState, useContext } from 'react';\r\nimport { TodoListContext } from '../../store/TodoList/TodoList.context';\r\nimport { addTask } from '../../store/TodoList/TodoList.services';\r\nimport { ADD, ERROR, LOADING } from '../../store/TodoList/TodoList.actions';\r\nimport './AddTask.scss';\r\n\r\nconst AddTask = () => {\r\n    const { dispatch, setTasks, todoListState: { isLoading } } = useContext(TodoListContext);\r\n    \r\n    const [taskValue, setTaskValue] = useState('');\r\n    const [taskError, setTaskError] = useState(false);\r\n\r\n    const handleAddTaskValue = ({ target: { value } }) => setTaskValue(value);\r\n    const handleaddTaskSubmit = async event => {\r\n        event.preventDefault();\r\n        if (taskValue.length < 2) {\r\n            setTaskError(true);\r\n            return;\r\n        }\r\n        dispatch({ type: LOADING, payload: true });\r\n        \r\n        const newTask = {\r\n            name: taskValue,\r\n            done: false,\r\n            id: null,\r\n        };\r\n        \r\n        try {\r\n            await addTask(newTask);\r\n            dispatch({ type: ADD, payload: newTask });\r\n            setTasks();\r\n        } catch (err) {\r\n            dispatch({type: ERROR, payload: err});\r\n        }\r\n        \r\n        setTaskValue('');\r\n        setTaskError(false);\r\n    };\r\n\r\n    const preventEmptySubmit = event => {\r\n        event.preventDefault();\r\n        return;\r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={isLoading ? preventEmptySubmit : handleaddTaskSubmit} className=\"addTask\">\r\n            <label className=\"addTask__label\">\r\n                Add task\r\n                <input\r\n                    onChange={handleAddTaskValue}\r\n                    value={isLoading ? '' : taskValue}\r\n                    className=\"addTask__input\"\r\n                    type=\"text\"\r\n                />\r\n            </label>\r\n            {taskError && (\r\n                <p className=\"addTask__error\">The task must be at least 2 characters long</p>\r\n            )}\r\n            <button className=\"addTask__btn\">add</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddTask;\r\n","export const TODO_LIST = 'TODO';\r\nexport const DONE_LIST = 'DONE';","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loading-mask\">\r\n            <div className=\"preloader\">\r\n                <div className=\"c-three-dots-loader\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useContext, useRef, useEffect, useCallback } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n// import { useClickOutside } from 'react-click-outside-hook';\r\nimport { DONE, EDIT, ERROR, LOADING, REMOVE } from '../../store/TodoList/TodoList.actions';\r\nimport { editTask, removeTask, setDoneOrTodo  } from '../../store/TodoList/TodoList.services';\r\nimport { TodoListContext } from '../../store/TodoList/TodoList.context';\r\nimport './Task.scss';\r\n\r\nconst Task = ({ task, index, task: { id, name, done } }) => {\r\n    const {\r\n        dispatch,\r\n        todoListState: { isLoading, todoListTodo, todoListDone },\r\n    } = useContext(TodoListContext);\r\n    // const {TASK_TODO, TASK_DONE} = TaskType;\r\n    const [editingTask, setEditingTask] = useState({\r\n        isEditing: false,\r\n        name: '',\r\n    });\r\n    // const [taskRef, hasClickedOutside] = useClickOutside();\r\n    const inputRef = useRef();\r\n\r\n    // DELETE BTN\r\n    const handleDelete = async value => {\r\n        dispatch({ type: LOADING, payload: true });\r\n\r\n        try {\r\n            await removeTask(id, value);\r\n            dispatch({ type: REMOVE, payload: { id, value } });\r\n        } catch (err) {\r\n            dispatch({ type: ERROR, payload: err });\r\n        }\r\n    };\r\n\r\n    // DONE BTN\r\n    const handleDone = async value => {\r\n        const doneTask = {\r\n            ...task,\r\n            done: value\r\n        };\r\n        dispatch({ type: LOADING, payload: true });\r\n\r\n        if (value) {\r\n            const newTodoList = todoListTodo.filter(todo => todo.id !== task.id);\r\n            const newDoneList = [...todoListDone];\r\n            newDoneList.push(doneTask);\r\n            try {\r\n                await setDoneOrTodo (doneTask, value);\r\n                dispatch({ type: DONE, payload: { newTodoList, newDoneList } });\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err });\r\n            }\r\n        } else if (!value) {\r\n            const newDoneList = todoListDone.filter(todo => todo.id !== task.id);\r\n            const newTodoList = [...todoListTodo];\r\n            newTodoList.push(doneTask);\r\n\r\n            try {\r\n                await setDoneOrTodo (doneTask, value);\r\n                dispatch({ type: DONE, payload: { newTodoList, newDoneList } });\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err });\r\n            }\r\n        }\r\n    };\r\n\r\n    // EDITION BTN\r\n    const handleEditionComponent = useCallback(async () => {\r\n        if (editingTask.isEditing) {\r\n            inputRef.current.focus();\r\n            // SIMPLE VALIDATION\r\n            if (editingTask.name.length < 2) return;\r\n            if (editingTask.name === name) {\r\n                setEditingTask({ isEditing: false });\r\n                return;\r\n            }\r\n\r\n            const newTask = {\r\n                ...task,\r\n                name: editingTask.name,\r\n            };\r\n\r\n            try {\r\n                await editTask(newTask);\r\n                dispatch({ type: EDIT, payload: newTask });\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err });\r\n            }\r\n            setEditingTask({ ...editingTask, isEditing: false });\r\n            return;\r\n        }\r\n        setEditingTask({ isEditing: true, name });\r\n    }, [dispatch, editingTask, name, task]);\r\n\r\n    const handleNameChange = ({ target: { value } }) => setEditingTask({ ...editingTask, name: value });\r\n\r\n    //FOCUS ON EDITING INPUT\r\n    useEffect(() => {\r\n        if (editingTask.isEditing) inputRef.current.focus();\r\n    }, [editingTask.isEditing]);\r\n\r\n    //HANDLE CLICK OUTSIDE\r\n    // useEffect(() => {\r\n    //     if (hasClickedOutside && editingTask.isEditing) handleEditionComponent();\r\n    // }, [editingTask.isEditing, handleEditionComponent, hasClickedOutside]);\r\n\r\n    // RENDER COMPONENTS\r\n    const taskToDoElements = (\r\n        <>\r\n            {editingTask.isEditing ? (\r\n                <input\r\n                    className=\"task__input\"\r\n                    type=\"text\"\r\n                    value={editingTask.name}\r\n                    onChange={handleNameChange}\r\n                    ref={inputRef}\r\n                />\r\n            ) : (\r\n                <p className=\"task__title\" onClick={handleEditionComponent}>\r\n                    {name}\r\n                </p>\r\n            )}\r\n            <div className=\"task__btn-box\">\r\n                <button\r\n                    onClick={editingTask.isEditing ? null : () => handleDone(true)}\r\n                    className=\"task__btn-box-btn\">\r\n                    done\r\n                </button>\r\n                <button\r\n                    onClick={isLoading ? null : handleEditionComponent}\r\n                    className=\"task__btn-box-btn\">\r\n                    {editingTask.isEditing ? 'ok' : 'edit'}\r\n                </button>\r\n                <button\r\n                    onClick={editingTask.isEditing ? null : () => handleDelete(true)}\r\n                    className=\"task__btn-box-btn\">\r\n                    x\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    const taskToDo = (\r\n        <Draggable draggableId={id} index={index}>\r\n            {provided => (\r\n                <li\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                    className=\"task\">\r\n                    {taskToDoElements}\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    );\r\n\r\n    const taskDone = (\r\n        <Draggable draggableId={id} index={index}>\r\n            {provided => (\r\n                <li\r\n                    className=\"task\"\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}>\r\n                    <p className=\"task__title task__title--done\">{name}</p>\r\n                    <div className=\"task__btn-box\">\r\n                        <button\r\n                            onClick={() => handleDone(false)}\r\n                            className=\"task__btn-box-btn task__btn-box-btn--undo\">\r\n                            undo\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleDelete(false)}\r\n                            className=\"task__btn-box-btn task__btn-box-btn--done\">\r\n                            x\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    );\r\n\r\n    return <>{!done ? taskToDo : taskDone}</>;\r\n};\r\n\r\nexport default Task;\r\n","import React, { useContext } from 'react';\r\nimport {\r\n    CHANGE_LIST_ORDER,\r\n    ERROR,\r\n    LOADING,\r\n} from '../../store/TodoList/TodoList.actions';\r\nimport { changeOrder } from '../../store/TodoList/TodoList.services';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { TodoListContext } from '../../store/TodoList/TodoList.context';\r\nimport { TODO_LIST, DONE_LIST } from './TaskListType';\r\nimport Loader from '../Loader/Loader';\r\nimport Task from '../Task/Task';\r\nimport './TasksList.scss';\r\n\r\nconst TasksList = () => {\r\n    const {\r\n        dispatch,\r\n        todoListState: { todoListTodo, todoListDone, isLoading },\r\n    } = useContext(TodoListContext);\r\n\r\n    //DRAG AND DROP\r\n    const onDragEnd = async result => {\r\n        const { destination, source } = result;\r\n        if (!destination) return;\r\n        \r\n        if (\r\n            destination.droppableId === source.droppableId &&\r\n            destination.index === source.index\r\n        ) return;\r\n        \r\n        const start = source.droppableId;\r\n        const finish = destination.droppableId;\r\n\r\n        if (start === finish) {\r\n            if (source.droppableId === TODO_LIST) {\r\n                dispatch({ type: LOADING, payload: true });\r\n\r\n                const newTasksOrderTodo = [...todoListTodo];\r\n                const task = newTasksOrderTodo.splice(source.index, 1);\r\n                newTasksOrderTodo.splice(destination.index, 0, ...task);\r\n                \r\n                try {\r\n                    await changeOrder(newTasksOrderTodo, true);\r\n                    dispatch({ type: CHANGE_LIST_ORDER, payload: {newTasksOrderTodo, newTasksOrderDone: todoListDone } });\r\n                } catch (err) {\r\n                    dispatch({ type: ERROR, payload: err + 'order' });\r\n                }\r\n            } else {\r\n                dispatch({ type: LOADING, payload: true });\r\n\r\n                const newTasksOrderDone = [...todoListDone];\r\n                const task = newTasksOrderDone.splice(source.index, 1);\r\n                newTasksOrderDone.splice(destination.index, 0, ...task);\r\n\r\n                try {\r\n                    await newTasksOrderDone.forEach(task => changeOrder(task, false));\r\n                    dispatch({ type: CHANGE_LIST_ORDER, payload: { newTasksOrderDone, newTasksOrderTodo: todoListTodo } });\r\n                } catch (err) {\r\n                    dispatch({ type: ERROR, payload: err });\r\n                }\r\n            }\r\n        } else if (start === TODO_LIST && finish === DONE_LIST) {\r\n            dispatch({ type: LOADING, payload: true });\r\n\r\n            const newTasksOrderTodo = [...todoListTodo];\r\n            const newTasksOrderDone = [...todoListDone];\r\n            const task = newTasksOrderTodo.splice(source.index, 1);\r\n            task[0].done = !task[0].done;\r\n\r\n            newTasksOrderDone.splice(destination.index, 0, ...task);\r\n\r\n            try {\r\n                await newTasksOrderTodo.forEach(task => changeOrder(task, true));\r\n                await newTasksOrderDone.forEach(task => changeOrder(task, false));\r\n                dispatch({ type: CHANGE_LIST_ORDER, payload: { newTasksOrderDone, newTasksOrderTodo } });\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err });\r\n            }\r\n\r\n        } else if (start === DONE_LIST && finish === TODO_LIST) {\r\n            dispatch({ type: LOADING, payload: true });\r\n\r\n            const newTasksOrderDone = [...todoListDone];\r\n            const newTasksOrderTodo = [...todoListTodo];\r\n            const task = newTasksOrderDone.splice(source.index, 1);\r\n            task[0].done = !task[0].done;\r\n\r\n            newTasksOrderTodo.splice(destination.index, 0, ...task);\r\n\r\n            try {\r\n                await newTasksOrderTodo.forEach(task => changeOrder(task, true));\r\n                await newTasksOrderDone.forEach(task => changeOrder(task, false));\r\n                dispatch({ type: CHANGE_LIST_ORDER, payload: { newTasksOrderDone, newTasksOrderTodo } });\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err });\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    //CREATE TASKS COMPONENTS\r\n    const renderTasksToDo = todoListTodo.map((task, index) => (\r\n        <Task key={task.id} index={index} task={task} />\r\n    ));\r\n\r\n    const renderTasksDone = todoListDone.map((task, index) => (\r\n        <Task key={task.id} index={index} task={task} />\r\n    ));\r\n\r\n    //INSOLATE COMPONENTS INTO DONE AND TO DO\r\n    const showTasksToDo = !todoListTodo.length ? (\r\n        <p className=\"tasks-box__info\">No tasks on the list</p>\r\n    ) : (\r\n        <ul className=\"tasks-box__ul\">{renderTasksToDo}</ul>\r\n    );\r\n\r\n    const showTasksDone = !todoListDone.length ? (\r\n        <p className=\"tasks-box__info\">No tasks completed</p>\r\n    ) : (\r\n        <ul className=\"tasks-box__ul\">{renderTasksDone}</ul>\r\n    );\r\n\r\n    //COMPONENT TO RENDER\r\n    const tasksFullList = (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <div className=\"tasks-box\">\r\n                <Droppable droppableId={TODO_LIST}>\r\n                    {provided => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                            className=\"tasks-box-todo\">\r\n                            <h2 className=\"tasks-box__header\">\r\n                                Tasks to do ({todoListTodo.length})\r\n                            </h2>\r\n                            {showTasksToDo}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n\r\n                <Droppable droppableId={DONE_LIST}>\r\n                    {provided => (\r\n                        <div\r\n                            className=\"tasks-box-done\"\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}>\r\n                            <h3 className=\"tasks-box__header--done\">\r\n                                Done tasks ({todoListDone.length})\r\n                            </h3>\r\n                            {showTasksDone}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n        </DragDropContext>\r\n    );\r\n    return <>{isLoading ? <Loader /> : tasksFullList}</>;\r\n};\r\n\r\nexport default TasksList;\r\n","import React from 'react';\r\nimport TodoListProvider from './store/TodoList/TodoList.context';\r\nimport AddTask from './components/AddTask/AddTask';\r\nimport TaskList from './components/TasksList/TasksList';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"toDo\">\r\n            <div className=\"toDo__container\">\r\n                <h1 className=\"toDo__header\">todo app</h1>\r\n                <TodoListProvider>\r\n                    <AddTask />\r\n                    <TaskList />\r\n                </TodoListProvider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}